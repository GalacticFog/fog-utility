image:
  name: galacticfog/docker-yarn-debian:8.11.3

stages:
  - build-cli
  - build-image
  - test
  - deploy
  - publish

services:
  - docker:dind
  
.dependency_common: &dependency_common
  artifacts:
    paths:
    - .ci/

build-cli:
  <<: *dependency_common
  stage: build-cli
  allow_failure: false
  script:
    - echo ${CI_BUILD_TAG} ${CI_BUILD_REF_NAME}
    - echo ${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - echo ${CI_COMMIT_SHA:0:8}
    - npm install -g pkg
    - ls -la /usr/local/lib/node_modules
    - echo ${GF_DOCKER_PWD} | docker login --username ${GF_DOCKER_USER} --password-stdin
    - VERSION=$(<package.json jq -r '.version')
    - echo "[Info][FOG CLI Version][${VERSION}]"
    - echo "[Info][CI_COMMIT_SHA][$CI_COMMIT_SHA]"
    - ./build-cli.sh
    - ls -la /usr/local/lib/node_modules/npm
    - echo ${PKG_CACHE_PATH}
    - .ci/dependency success
    - ls -la .ci/dependency
  artifacts:
    paths:
    - "./target/*/fog"

build-image:
  <<: *dependency_common
  before_script:
  - .ci/dependency require build-cli
  stage: build-image
  allow_failure: false
  script:
    - apt-get install zip unzip
    - ls -la ./target
    - VERSION=$(<package.json jq -r '.version')
    - echo "[Info][FOG CLI Version][${VERSION}]"
    - echo "[Info][CI_COMMIT_SHA][$CI_COMMIT_SHA]"
    - echo ${GF_DOCKER_PWD} | docker login --username ${GF_DOCKER_USER} --password-stdin
    - ./build-image.sh "${VERSION} $CI_COMMIT_SHA"
    - .ci/dependency success
    
github-publish:
  <<: *dependency_common
  before_script:
  - .ci/dependency require build-cli build-image
  stage: publish
  script: 
    - git remote remove github || true
    - git remote add github https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_ORG}/${GITHUB_REPO}.git
    - |
      if [ -z ${CI_BUILD_TAG} ]; then 
         git push github HEAD:$CI_BUILD_REF_NAME
      else 
         git push -f github $CI_BUILD_TAG
      fi
  when: manual

