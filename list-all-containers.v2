#!/usr/bin/env node
const argv = require('yargs').argv
const gestalt = require('./lib/gestalt')
const displayResource = require('./lib/displayResourceUI');

try {
    let allContainers = [];

    gestalt.fetchOrgFqons().map(fqon => {
        const envs = gestalt.fetchOrgEnvironments([fqon]);
        envs.map(env => {
            console.log(`Fetching containers from ${fqon}/'${env.name}'`);
            const state = {
                org: {
                    fqon: fqon
                },
                environment: {
                    id: env.id
                }
            }
            try {
                const containers = gestalt.fetchContainers(state);

                // Transform for display
                containers.map(item => {
                    item.env = { name: env.name };
                    item.fqon = fqon;
                    item.running_instances = `${item.properties.tasks_running} / ${item.properties.num_instances}`;
                });

                allContainers = allContainers.concat(containers);
            } catch (err) {
                console.log(`Error: ${err.message}`);
            }
        });
    });

    displayContainers(allContainers);

} catch (err) {
    console.log(err.message);
    console.log("Try running 'change-context'");
    console.log();
}

function displayContainers(containers) {
    const options = {
        message: "Containers",
        headers: ['Container', 'Description', 'Status', /*'Image',*/ 'Instances', 'Owner', 'FQON', 'ENV'],
        fields: ['name', 'description', 'properties.status', /*'properties.image',*/ 'running_instances', 'owner.name', 'org.properties.fqon', 'env.name'],
        sortField: 'org.properties.fqon',
    }

    displayResource.run(options, containers);
}
