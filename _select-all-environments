#!/usr/bin/env node
const argv = require('yargs').argv
const gestalt = require('./lib/gestalt')
const selectResource = require('./lib/selectResourceUI');

selectResource.mode = 'autocomplete';

function sortBy(arr, key) {
    return arr.sort((a, b) => {
        if (a[key] < b[key]) { return -1; }
        if (a[key] > b[key]) { return 1; }
        return 0;
    })
}

const options = {
    message: "Select Environment",
    valueKey: 'value',
    fields: ['description', 'name', 'properties.environment_type', 'org.properties.fqon', 'owner.name'],
    returnValue: "value",
    fetchFunction: () => {

        var res = gestalt.fetchOrgEnvironments(gestalt.fetchOrgFqons());

        console.log(JSON.stringify(res, null, 2));

        res.map(r => {
            r.value = {
                environment: {
                    id: r.id,
                    name: r.name,
                    description: r.description
                },
                org: {
                    fqon: r.org.properties.fqon,
                    id: r.org.id
                },
                workspace: {
                }
            };
            if (r.properties.workspace) {
                if (r.properties.workspace.id) {
                    r.value.workspace.id = r.properties.workspace.id;
                }
                if (r.properties.workspace.name) {
                    r.value.workspace.name = r.properties.workspace.name;
                }
            }
        });
        return sortBy(res, 'description');
    }
}

selectResource.run(options, answers => {
    console.log("ASDFASDF" + JSON.stringify(answers, null, 2))
    // Set all in specific order
    gestalt.setCurrentOrg(answers.value.org);
    console.log("ASDFASDF2")
    gestalt.setCurrentWorkspace(answers.value.workspace);
    console.log("ASDFASDF3")
    gestalt.setCurrentEnvironment(answers.value.environment);
});
